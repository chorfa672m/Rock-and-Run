//
// Generated by eBay Common SDK Platform, DO NOT CHANGE!
//

#import <Foundation/Foundation.h>
#import "EbayNs_ClassSchema.h"
#import "EbayNs_PropertySchema.h"
#import "EbayNs_BindingConstant.h"
#import "EbayNs_Bindable.h"



/**
 
 Information that describes an item's condition. 
 
 
 @ingroup FindingService
*/
@interface FindingService_Condition : NSObject <EbayNs_Bindable> {

@private
    NSNumber *conditionId;
    NSString *conditionDisplayName;
    NSString *delimiter;

}


/**
 
 The numeric ID (e.g., 1000) for the item condition.<br>
 <br>
 Only returned when the seller listed the item with a condition ID. 
 Some categories don't support or require condition IDs 
 (e.g., most Antiques categories don't). Also, until spring 2011, 
 some GTC listings may define the item condition in item specifics
 instead, so no ID is returned.<br>
 <br>
 If you specify Condition in itemFilter, the response returns items
 with the correctly matching condition(s), even if conditionId is 
 not returned. For example, if you specify a value of "New" 
 or "1000" in the item filter, the response only returns new items.
 
 
 type : NSNumber, wrapper for primitive int
*/
@property (nonatomic, retain) NSNumber *conditionId;

/**
 
 The human-readable label for the item condition. 
 Display names are localized for the site on which they're listed 
 (not necessarily the site on which they're viewed).<br>
 <br>
 Only returned when the seller specified the item's condition 
 using a structured format eBay recognizes (e.g., conditionId or an
 older item specifics format).<br>
 <br>
 <b>When conditionId is also present:</b> 
 Most categories use the same display name for the same 
 condition ID. Some categories may override the display name based 
 on buyer expectations for items in the category. 
 For example, condition ID 1000 could be called "New" in one category and 
 "New with tags" in another.<br>
 <br>
 Behind the scenes, eBay's search engine uses the ID (not the 
 display name) to determine whether items are new, used, or 
 refurbished. So, if you need to normalize the conditions 
 across categories (such as to group items by condition), 
 it may be easier to use the ID and then show the varying 
 display names for reference.
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *conditionDisplayName;

/**
 (public property)
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *delimiter;



@end
