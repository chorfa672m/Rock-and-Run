//
// Generated by eBay Common SDK Platform, DO NOT CHANGE!
//

#import <Foundation/Foundation.h>
#import "EbayNs_ClassSchema.h"
#import "EbayNs_PropertySchema.h"
#import "EbayNs_BindingConstant.h"
#import "EbayNs_Bindable.h"
#import "Trading_AbstractRequestType.h"


@class Trading_PaginationType;

/**
 
 Retrieves transaction information for a specified itemID. The call returns zero, one,
 or multiple transactions, depending on the number of items sold from the listing.
 <br><br>
 You can retrieve transaction data for a specific time range or number of days. If you don't specify a
 a range or number of days, transaction data will be returned for the past 30 days.
 
 
 @ingroup Trading
*/
@interface Trading_GetItemTransactionsRequestType : Trading_AbstractRequestType {

@private
    NSString *itemID;
    NSDate *modTimeFrom;
    NSDate *modTimeTo;
    NSString *transactionID;
    Trading_PaginationType *pagination;
    NSNumber *includeFinalValueFee;
    NSNumber *includeContainingOrder;
    NSString *platform;
    NSNumber *numberOfDays;
    NSNumber *includeVariations;

}


/**
 
 Unique item ID for a listing that has transactions
 (purchases). When you use ItemID alone, eBay returns
 all available transactions that are associated with the
 listing. Also see other input filters (such as the
 time filters) for ways to reduce the number of
 transactions returned.<br>
 <br>
 If a listing has a Quantity greater than 1, and one
 or more items were purchased separately, the call can
 return multiple transactions. To uniquely
 identify and retrieve a particular transaction, use
 both ItemID and TransactionID together.<br>
 <br>
 <span class="tablenote"><b>Note:</b>
 GetItemTransactions doesn't support SKU as an input because this
 call requires an identifier that is unique across your active
 and ended listings. Even when InventoryTrackingMethod is set to
 SKU in a listing, the SKU is only unique across your active
 listings (not your ended listings). To retrieve transactions
 by SKU, use GetSellerTransactions instead.
 </span>
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *itemID;

/**
 
 Also see NumberOfDays, which (if used), takes precedence over ModTimeFrom and
 ModTimeTo. If you prefer to use ModTimeFrom and ModTimeTo, specify the time range
 within which retrieved transactions' statuses were modified. ModTimeFrom is the
 earlier (older) date and ModTimeTo is the later (more recent) date. If you specify
 ModTimeFrom, but do not specify the other end of the range, the time range is set
 to 30 days. The time range between ModTimeFrom to ModTimeTo cannot be greater than
 30 days.
 <br><br>
 If you don't specify ModTimeFrom and ModTimeTo, NumberOfDays with a default of 30
 days will be used.
 
 
 type : NSDate, wrapper for primitive date
*/
@property (nonatomic, retain) NSDate *modTimeFrom;

/**
 
 Also see NumberOfDays, which (if used), takes precedence over ModTimeFrom and
 ModTimeTo. If you prefer to use ModTimeFrom and ModTimeTo, specify the time range
 within which retrieved transactions' statuses were modified. ModTimeFrom is the
 earlier (older) date and ModTimeTo is the later (more recent) date. If you specify
 ModTimeTo, but do not specify the other end of the range, the time range is set to
 30 days. The time range between ModTimeFrom to ModTimeTo cannot be greater than 30
 days.
 <br><br>
 If you don't specify ModTimeFrom and ModTimeTo, NumberOfDays with a default of 30
 days will be used.
 
 
 type : NSDate, wrapper for primitive date
*/
@property (nonatomic, retain) NSDate *modTimeTo;

/**
 
 Identifies one transaction for a listing. For Chinese auction listings
 (single-item listings for which there can be only one transaction),
 TransactionID is always 0, and for multi-quantity listings (for which
 there can be multiple transactions), TransactionID has a non-0 value. If
 TransactionID is provided, details are returned for the transaction,
 regardless of any time range you might have specified (e.g. ModTimeFrom,
 NumberOfDays). To determine the valid transaction IDs for a listing, you
 typically need to have previously executed GetItemTransactionsCall or
 GetSellerTransactionsCall and stored all the listing's transactions.
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *transactionID;

/**
 
 Child elements control pagination of the output. Use EntriesPerPage
 property to control the number of transactions to return per call and
 PageNumber property to specify the page of data to return.
 
 
 type : class Trading_PaginationType
*/
@property (nonatomic, retain) Trading_PaginationType *pagination;

/**
 
 Indicates whether to include a Final Value Fee (FVF) in the response. For
 most listing types, the Final Value Fee is returned in
 Transaction.FinalValueFee. The final value fee is returned on a
 transaction-by-transaction basis for FixedPriceItem and StoresFixedPrice
 listing types. For all other listing types, the Final Value Fee is
 returned when the listing status is Completed. This value is not returned
 if the auction ended with Buy It Now.
 <br><br>
 For Dutch (multi-item) auctions that end with bids (not Buy It Now
 purchases), the Final Value Fee is returned in
 Item.SellingStatus.FinalValueFee. For Dutch Buy It Now listings, the Final
 Value Fee is returned on a transaction-by-transaction basis.
 <br><br>
 <span class="tablenote"><strong>Note:</strong>
 As of version 619, Dutch-style (multi-item) competitive-bid auctions are deprecated.
 eBay throws an error if you submit a Dutch item listing with AddItem
 or VerifyAddItem. If you use RelistItem to update a Dutch auction listing,
 eBay generates a warning and resets the Quantity value to 1.
 </span>
 <br>
 
 
 type : NSNumber, wrapper for primitive bool
*/
@property (nonatomic, retain) NSNumber *includeFinalValueFee;

/**
 
 Whether to retrieve the order information. Default is false.
 
 
 type : NSNumber, wrapper for primitive bool
*/
@property (nonatomic, retain) NSNumber *includeContainingOrder;

/**
 
 Name of the eBay co-branded site upon which the transaction was made.
 This will serve as a filter for the transactions to get emitted in the response.
 
 
 type: string constant in Trading_TransactionPlatformCodeType.h
*/
@property (nonatomic, retain) NSString *platform;

/**
 
 NumberOfDays enables you to specify the number of days' worth of new and modified
 transactions that you want to retrieve. The call response contains the
 transactions whose status was modified within the specified number of days since
 the API call was made. NumberOfDays is often preferable to using the ModTimeFrom
 and ModTimeTo filters because you only need to specify one value. If you use
 NumberOfDays, then ModTimeFrom and ModTimeTo are ignored. For this field, one day
 is defined as 24 hours.
 <br><br>
 If you don't specify ModTimeFrom and ModTimeTo, NumberOfDays with a default of 30
 will be used.
 
 
 type : NSNumber, wrapper for primitive int
*/
@property (nonatomic, retain) NSNumber *numberOfDays;

/**
 
 If true, all variations defined for the item are returned in the
 Item-level details, including variations that have no
 transactions. (If false, the applicable variations are still
 returned in the Transaction-level details.) This information is
 intended to help sellers to reconcile their local inventory with
 eBay's records while processing transactions (without requiring
 a separate call to GetItem).
 
 
 type : NSNumber, wrapper for primitive bool
*/
@property (nonatomic, retain) NSNumber *includeVariations;


@end
