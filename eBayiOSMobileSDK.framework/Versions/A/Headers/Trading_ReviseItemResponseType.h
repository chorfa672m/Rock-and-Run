//
// Generated by eBay Common SDK Platform, DO NOT CHANGE!
//

#import <Foundation/Foundation.h>
#import "EbayNs_ClassSchema.h"
#import "EbayNs_PropertySchema.h"
#import "EbayNs_BindingConstant.h"
#import "EbayNs_Bindable.h"
#import "Trading_AbstractResponseType.h"


@class Trading_FeesType;

/**
 
 Returns the item ID and the estimated fees for the revised listing.
 
 
 @ingroup Trading
*/
@interface Trading_ReviseItemResponseType : Trading_AbstractResponseType {

@private
    NSString *itemID;
    NSDate *startTime;
    NSDate *endTime;
    Trading_FeesType *fees;
    NSString *categoryID;
    NSString *category2ID;
    NSNumber *verifyOnly;
    NSMutableArray *discountReason;

}


/**
 
 Item ID that uniquely identifies the item listing that was revised.
 Provided for confirmation purposes. The value returned should be the
 same as the item ID specified in the ItemID property of the Item object
 specified as input for the call.
 Also applicable to Half.com.
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *itemID;

/**
 
 Starting date and time for the revised listing.
 Also returned for Half.com (for Half.com, the start time is
 always the time the item was originally listed).
 
 
 type : NSDate, wrapper for primitive date
*/
@property (nonatomic, retain) NSDate *startTime;

/**
 
 Date and time when the new listing ends. This is the starting time
 plus the listing duration.
 Also returned for Half.com, but for Half.com the actual end time is GTC
 (not the end time returned in the response).
 
 
 type : NSDate, wrapper for primitive date
*/
@property (nonatomic, retain) NSDate *endTime;

/**
 
 Child elements contain the estimated listing fees for the revised item
 listing. The fees do not include the Final Value Fee (FVF), which cannot
 be determined until an item is sold. Revising an item does not itself
 incur a fee. However, certain item properties are fee-based and result
 in the return of fees in the call's response.
 Not applicable to Half.com.
 
 
 type : class Trading_FeesType
*/
@property (nonatomic, retain) Trading_FeesType *fees;

/**
 
 ID of the primary category in which the item was listed.
 Only returned if you set Item.CategoryMappingAllowed to true in the request
 and the ID passed in Item.PrimaryCategory was mapped to a new ID by eBay.
 If the primary category has not changed or it has expired with no replacement,
 CategoryID does not return a value.
 Not applicable to Half.com.
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *categoryID;

/**
 
 ID of the secondary category in which the item was listed.
 Only returned if you set Item.CategoryMappingAllowed to true in the request
 and the ID passed in Item.SecondaryCategory was mapped to a new ID by eBay.
 If the secondary category has not changed or it has expired with no replacement,
 Category2ID does not return a value.
 Not applicable to Half.com.
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *category2ID;

/**
 
 Supporting VerifyOnly for ReviseItem call as part of project 24083 (API - Critical enhancements).
 When the VerifyOnly boolean tag value is supplied as 'true', the response will include the calculated
 listing price change if there is an increase in the BIN/Start price, but does not persist the values in DB.
 This call is simialr to VerifyAddItem in revise mode.
 
 
 type : NSNumber, wrapper for primitive bool
*/
@property (nonatomic, retain) NSNumber *verifyOnly;

/**
 
 The nature of the discount, if a discount applied.
 
 
 entry type : string constant in Trading_DiscountReasonCodeType.h
*/
@property (nonatomic, retain) NSMutableArray *discountReason;


@end
