//
// Generated by eBay Common SDK Platform, DO NOT CHANGE!
//

#import <Foundation/Foundation.h>
#import "EbayNs_ClassSchema.h"
#import "EbayNs_PropertySchema.h"
#import "EbayNs_BindingConstant.h"
#import "EbayNs_Bindable.h"


@class Trading_MinimumFeedbackScoreDetailsType;
@class Trading_VerifiedUserRequirementsDetailsType;
@class Trading_MaximumItemRequirementsDetailsType;
@class Trading_MaximumBuyerPolicyViolationsDetailsType;
@class Trading_MaximumUnpaidItemStrikesInfoDetailsType;

/**
 
 New container for site-specific buyer requirements.
 
 
 @ingroup Trading
*/
@interface Trading_SiteBuyerRequirementDetailsType : NSObject <EbayNs_Bindable> {

@private
    NSNumber *linkedPayPalAccount;
    Trading_MaximumBuyerPolicyViolationsDetailsType *maximumBuyerPolicyViolations;
    Trading_MaximumItemRequirementsDetailsType *maximumItemRequirements;
    Trading_MaximumUnpaidItemStrikesInfoDetailsType *maximumUnpaidItemStrikesInfo;
    Trading_MinimumFeedbackScoreDetailsType *minimumFeedbackScore;
    NSNumber *shipToRegistrationCountry;
    Trading_VerifiedUserRequirementsDetailsType *verifiedUserRequirements;
    NSString *detailVersion;
    NSDate *updateTime;

}


/**
 
 If true, it specifies that the site's buyer requirements support PayPal.
 
 
 type : NSNumber, wrapper for primitive bool
*/
@property (nonatomic, retain) NSNumber *linkedPayPalAccount;

/**
 
 If provided, blocks bidders who have received the maximum allowed buyer
 policy violation reports (in a specific time period) from bidding on this item.
 
 
 type : class Trading_MaximumBuyerPolicyViolationsDetailsType
*/
@property (nonatomic, retain) Trading_MaximumBuyerPolicyViolationsDetailsType *maximumBuyerPolicyViolations;

/**
 
 If this field is included in your call, you can limit unpaying or low feedback bidders,
 by setting the MaximumItemCount and MinimumFeedbackScore to define when a bidder is blocked
 from bidding.
 
 
 type : class Trading_MaximumItemRequirementsDetailsType
*/
@property (nonatomic, retain) Trading_MaximumItemRequirementsDetailsType *maximumItemRequirements;

/**
 
   If provided, you can specify a maximum number of unpaid items that will result in blocking bidders who
   have received the maximum unpaid item strikes (in a specific time period) from bidding on this item.
 
 
 type : class Trading_MaximumUnpaidItemStrikesInfoDetailsType
*/
@property (nonatomic, retain) Trading_MaximumUnpaidItemStrikesInfoDetailsType *maximumUnpaidItemStrikesInfo;

/**
 
 Specifies the valid values for blocking bidders with this feedback score or lower.
 
 
 type : class Trading_MinimumFeedbackScoreDetailsType
*/
@property (nonatomic, retain) Trading_MinimumFeedbackScoreDetailsType *minimumFeedbackScore;

/**
 
 if true, it specifies if the sites buyer requirements supports ShipToRegistrationCountry.
 
 
 type : NSNumber, wrapper for primitive bool
*/
@property (nonatomic, retain) NSNumber *shipToRegistrationCountry;

/**
 
 Specifies the valid values for limiting unverified bidders.
 
 
 type : class Trading_VerifiedUserRequirementsDetailsType
*/
@property (nonatomic, retain) Trading_VerifiedUserRequirementsDetailsType *verifiedUserRequirements;

/**
 
 Returns the latest version number for this field. The version can be
 used to determine if and when to refresh cached client data.
 
 
 type : NSString, wrapper for primitive string
*/
@property (nonatomic, retain) NSString *detailVersion;

/**
 
 Gives the time in GMT that the feature flags for the details were last
 updated. This timestamp can be used to determine if and when to refresh
 cached client data.
 
 
 type : NSDate, wrapper for primitive date
*/
@property (nonatomic, retain) NSDate *updateTime;



@end
